{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useActiveWeb3React.ts","components/Layout/Row.tsx","state/mint/actions.ts","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","components/Layout/Column.tsx","config/constants/tokens.ts","utils/index.ts","config/constants/index.ts","utils/contractHelpers.ts","state/user/hooks/index.tsx","hooks/useContract.ts","config/constants/types.ts","components/Balance.tsx","state/types.ts","utils/multicall.ts","utils/wrappedCurrency.ts","state/user/actions.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","config/index.ts","config/constants/lists.ts","state/lists/hooks.ts","state/user/hooks/helpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","config/constants/nfts.ts","config/constants/pools.ts","utils/providers.ts","config/constants/endpoints.ts","hooks/useTheme.ts","state/block/hooks.ts","hooks/useToast.ts","state/wallet/hooks.ts","hooks/usePairs.ts","hooks/useBUSDPrice.ts","state/farms/hooks.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/predictions/config.ts","hooks/useRefresh.ts","state/transactions/hooks.tsx","state/transactions/actions.ts","components/Card/index.tsx","state/lottery/helpers.ts","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","components/ConnectWalletButton.tsx","state/profile/helpers.ts","state/profile/index.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/swap/hooks.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","hooks/useCallWithGasPrice.ts","hooks/useTokenBalance.ts","state/lottery/index.ts","utils/isZero.ts","contexts/Localization/helpers.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useAuth.ts","hooks/useDebounce.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","utils/web3React.ts","routerHistory.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","components/Loader/CircleLoader.tsx","utils/getRpcUrl.ts","state/lottery/getUserLotteryData.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","config/constants/campaigns.ts","components/SearchModal/filtering.ts","hooks/usePersistState.ts","utils/collectibles.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","components/TokenImage/index.tsx","views/Page.tsx","state/lottery/getUserTicketsData.ts","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/hooks.ts","utils/truncateHash.ts","components/Loader/PageLoader.tsx","utils/getTimePeriods.ts","state/collectibles/index.ts","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","components/PageHeader/PageHeader.tsx","state/lottery/getLotteriesData.ts","components/Select/Select.tsx","components/Loading.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmHelpers.ts","utils/apr.ts","hooks/useParsedQueryString.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","views/Collectibles/helpers.ts","views/Collectibles/hooks/useBunnySpecialLottery.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/ProfileUserMenutItem.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","views/Collectibles/components/NftGiveawayModal.tsx","views/Collectibles/components/GlobalCheckClaimStatus.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","getAddress","address","process","ChainId","MAINNET","getCakeAddress","tokens","cake","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","Column","ColumnCenter","AutoColumn","CAKE","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","souvlaki","qbt","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","muteAudio","unmuteAudio","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","updateUserSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","FarmStakedOnly","TRUE","FALSE","updateUserFarmStakedOnly","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","token","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","updateGasPrice","useReferralManager","referral","updateReferral","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","useMemo","generatedPairs","flatMap","tokenAddress","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","useIfoV1Contract","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useBunnySpecialLotteryContract","useFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","PoolIds","NftType","LotteryStatus","AuctionStatus","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","removeSerializedPair","toggleTheme","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","default","createReducer","builder","addCase","lastUpdateVersionTimestamp","action","payload","tokenAAddress","tokenBAddress","now","addTransaction","transactions","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","blockNumber","tx","lastCheckedBlockNumber","Math","max","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","includes","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","pools","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","isBNB","toUpperCase","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getBetHistory","where","first","skip","request","GRAPH_API_PREDICTION","gql","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","accum","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","Infinity","useCallsData","serializedCallKeys","JSON","stringify","c","sort","callKeys","parse","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","inputs","callData","useBlock","useMultipleContractSingleData","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","GAS_PRICE","parseUnits","fast","instant","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingSouvlaki","pendingReward","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","isLoading","lastDepositedTime","lastUserActionTime","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","createAsyncThunk","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","identifier","variationId","blur","CORE","harvest","RPC_URL","getRpcUrl","providers","JsonRpcProvider","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","useTheme","theme","StyledThemeContext","usePollBlockNumber","timer","isWindowVisible","useIsWindowVisible","setInterval","getBlockNumber","setBlock","clearInterval","useInitialBlock","initialBlock","useToast","toastContext","ToastsContext","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","BUSD_MAINNET","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","price","priceOf","Price","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","quote","greaterThan","ethBusdPrice","currencyEthPrice","busdPrice","usePollFarmsPublicData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","useTotalValue","bnbPrice","cakePrice","val","plus","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","Toast","toast","onRemove","ttl","removeHandler","title","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","RefreshContext","slow","useAllTransactions","isTransactionRecent","allTransactions","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfileAvatar","hasRegistered","getUserProfile","getNftByTokenId","nft","getProfile","getTeam","team","Cookies","avatar","domain","secure","expires","isInitialized","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","fetchProfile","priceHelperLps","lpAddresses","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","getTokenLogoURL","StyledLogo","uriLocations","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","balanceOf","fetchBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","FAILED","refresh","balanceState","setBalanceState","prev","isTransitioning","currentRound","lotteriesData","userLotteryData","totalCake","totalTickets","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","getUserLotteryData","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","getGraphLotteryUser","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","isZero","hexNumberString","getItem","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","useDebounce","delay","debouncedValue","setDebouncedValue","handler","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","hasProfile","useGetProfileAvatar","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","history","createBrowserHistory","TransactionState","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","GlobalSettings","BodyWrapper","AppBody","blockSlice","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","sample","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","blankUser","userRes","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","inputRegex","Input","React","nextUserInput","target","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","campaigns","badge","campaignMap","campaign","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","defaultOptions","hydrate","identity","dehydrate","usePersistState","userOptions","localStorageKey","valueFromLS","setValue","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","fetchCachedUriData","tokenUrl","localUriData","uriDataResponse","uriData","getTokenUriData","tokenURI","Dots","span","textColor","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","maxWidth","DEFAULT_META","StyledPage","PageMeta","pathname","useLocation","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","setStateLastUpdated","previousLastUpdated","usePreviousValue","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","xs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","userSelect","maxAmountSpend","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setRememberExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","rememberExpertModeAcknowledgement","setSingleHopOnly","overflowY","pb","borderTop","TransactionSettings","onPresentSettingsModal","ens","resolvedContentHash","useENSContentHash","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","currencyAAmount","currencyBAmount","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","IDLE","newestRound","maxBy","futureRound","futureRounds","useGetCurrentLotteryId","useGetUserLotteriesGraphData","useGetUserLotteryGraphRoundById","userRound","useGetLotteriesGraphData","useGetLotteryGraphDataById","useFetchLottery","useLottery","processedCurrentRound","maxNumberTicketsPerBuyOrClaimAsString","startLength","endLength","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","Outer","Inner","PageHeader","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","Loading","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","parseArrays","ignoreQueryPrefix","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","NO_CLAIM","canClaim","mintData","getLottieClaim","lotteryNftContract","canClaimNft1","bunnyId","getLuckyClaim","claimedWinningRounds","winningRound","claimedTickets","winningTicketCursor","canClaimNft2","getBallerClaim","userWhitelistForNft3","canClaimNft3","useBunnySpecialLottery","currentLotteryIdNum","setUserRounds","lotteryNftContractAddress","startRound","finalRound","startLotteryRoundInt","finalLotteryRoundInt","lotteryIdsArray","lottery_in","userParticipation","getUserData","canClaimLottie","lottieClaim","canClaimLucky","luckyClaim","canClaimBaller","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","Dot","ProfileUserMenuItem","handleClick","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","globalMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","userReferral","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","NaN","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","NftImage","img","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","y","NftGiveawayModal","nfts","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","claimableNfts","setClaimableNfts","onPresentGiftModal","nftConfigMap","lottie","lucky","baller","isBallerClaimable","isLottieClaimable","isLuckyClaimable","fetchClaimStatus","matchesSomeLocations","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Referral","Global","exact","strict","iterations","ThemeProviderWrapper","dark","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2098fa46.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x8Ab88fafA3D33077E96F76879a2179289b7AbEB6',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  souvlaki: {\n    symbol: 'SOUVLAKI',\n    address: {\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://souvlakiswap.com/',\n  },\n  qbt: {\n    symbol: 'QBT',\n    address: {\n      56: '0x17B7163cf1Dbd286E262ddc68b553D899B93f526',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://qbt.fi/',\n  },\n  pha: {\n    symbol: 'PHA',\n    address: {\n      56: '0x0112e557d400474717056C4e6D40eDD846F38351',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://phala.network',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  pots: {\n    symbol: 'POTS',\n    address: {\n      56: '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://moonpot.com/',\n  },\n  gnt: {\n    symbol: 'GNT',\n    address: {\n      56: '0xf750a26eb0acf95556e8529e72ed530f3b60f348',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.greentrusttoken.com/',\n  },\n  rusd: {\n    symbol: 'rUSD',\n    address: {\n      56: '0x07663837218a003e66310a01596af4bf4e44623d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://appv2.rampdefi.com/#/',\n  },\n  bp: {\n    symbol: 'BP',\n    address: {\n      56: '0xacb8f52dc63bb752a51186d1c55868adbffee9c1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bunnypark.com/',\n  },\n  sfund: {\n    symbol: 'SFUND',\n    address: {\n      56: '0x477bc8d23c634c154061869478bce96be6045d12',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://seedify.fund/ ',\n  },\n  naos: {\n    symbol: 'NAOS',\n    address: {\n      56: '0x758d08864fb6cce3062667225ca10b8f00496cc2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://naos.finance/',\n  },\n}\n\nexport default tokens\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  updateReferral,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nexport function useReferral(): string {\n  const referral = useSelector<AppState, AppState['user']['referral']>((state) => state.user.referral)\n  return referral\n}\n\nexport function useReferralManager(): [string, (userReferral: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userReferral = useReferral()\n\n  const setReferral = useCallback(\n    (referral: string) => {\n      dispatch(updateReferral({ referral }))\n    },\n    [dispatch],\n  )\n\n  return [userReferral, setReferral]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: Nft\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\nexport const updateReferral = createAction<{ referral: string }>('user/updateReferral')","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  updateGasPrice,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n  updateReferral,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  gasPrice: string\n  referral: string\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  gasPrice: GAS_PRICE_GWEI.default,\n  referral: '',\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(updateReferral, (state, action) => {\n      state.referral = action.payload.referral\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingSouvlaki('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Baller',\n    description: 'Absolute (lottery) baller.',\n    images: {\n      lg: 'baller-lg.png',\n      md: 'baller-md.png',\n      sm: 'baller-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.webm`,\n      mp4: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'baller',\n    type: NftType.PANCAKE,\n    variationId: 20,\n  },\n  {\n    name: 'Lucky',\n    description: \"Lucky's got the golden ticket!\",\n    images: {\n      lg: 'lucky-lg.png',\n      md: 'lucky-md.png',\n      sm: 'lucky-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.webm`,\n      mp4: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lucky',\n    type: NftType.PANCAKE,\n    variationId: 19,\n  },\n  {\n    name: 'Lottie',\n    description: \"Lottie's looking hotto for lotto!\",\n    images: {\n      lg: 'lottie-lg.png',\n      md: 'lottie-md.png',\n      sm: 'lottie-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lottie',\n    type: NftType.PANCAKE,\n    variationId: 18,\n  },\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png`,\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm`,\n      mp4: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png'`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm`,\n      mp4: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png`,\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png`,\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png`,\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png`,\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png`,\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png`,\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.souvlaki,\n    earningToken: tokens.souvlaki,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { ChainId, Currency, currencyEquals, JSBI, Price, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BUSD, CAKE, WBNB } from '../config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst BUSD_MAINNET = BUSD[ChainId.MAINNET]\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [\n        chainId && wrapped && currencyEquals(WETH[chainId], wrapped) ? undefined : currency,\n        chainId ? WETH[chainId] : undefined,\n      ],\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n      [chainId ? WETH[chainId] : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WETH[chainId])) {\n      if (busdPair) {\n        const price = busdPair.priceOf(WETH[chainId])\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(BUSD_MAINNET)) {\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WETH[chainId])\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WETH[chainId]).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      busdPairState === PairState.EXISTS &&\n      busdPair &&\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = busdPair.priceOf(wrapped)\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WETH[chainId]).greaterThan('0')) {\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WETH[chainId])\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const { chainId } = useActiveWeb3React()\n  const currentChaindId = chainId || ChainId.MAINNET\n  const cakeBusdPrice = useBUSDPrice(CAKE[currentChaindId])\n  return cakeBusdPrice\n}\n\nexport const useBNBBusdPrice = (): Price | undefined => {\n  const bnbBusdPrice = useBUSDPrice(WBNB)\n  return bnbBusdPrice\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { farmsConfig } from 'config/constants'\nimport tokens from 'config/constants/tokens'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const { data: farms, userDataLoaded } = useFarms()\n  const bnbPrice = useBNBBusdPrice()\n  const cakePrice = usePriceCakeBusd()\n  \n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteToken.symbol === tokens.bnb.symbol || farm.quoteToken.symbol === tokens.wbnb.symbol ) {\n        if (bnbPrice) {\n          val = (new BigNumber(bnbPrice.toFixed()).times(farm.lpTotalInQuoteToken))\n        } else {\n          val = 0\n        }\n      } else if (farm.quoteToken.symbol === tokens.cake.symbol) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken))\n      } else {\n        val = (farm.lpTotalInQuoteToken)\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { getTeam } from 'state/teams/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    nftAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n\n    if (!isActive) {\n      return null\n    }\n\n    const nft = await getNftByTokenId(nftAddress, tokenId)\n    return nft\n  } catch {\n    return null\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { Nft } from 'config/constants/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: Nft }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const nft = await getProfileAvatar(account)\n    return { account, nft }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<{ account: string; username: string }, string>(\n  'profile/fetchProfileUsername',\n  async (account) => {\n    const username = await getUsername(account)\n    return { account, username }\n  },\n)\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n        }\n      } else {\n        state.profileAvatars[account] = { username, nft: null }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n        }\n      } else {\n        state.profileAvatars[account] = { username: null, nft }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingSouvlaki',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'SOUVLAKI',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n    },\n    token: tokens.souvlaki,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'SOUVLAKI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2843ad12c0F0186A8Bb4A5a1ca839702e4B5955f',\n    },\n    token: tokens.souvlaki,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (!username && nft && address) {\n      dispatch(fetchProfileUsername(account))\n    }\n  }, [account, nft, username, dispatch])\n\n  return { username, nft }\n}\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount, referral) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, referral, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, referral, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount, referral) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid, referral) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', referral, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const fetchCachedUriData = async (tokenUrl: string) => {\n  try {\n    const localUriData = localStorage.getItem(tokenUrl)\n\n    if (localUriData) {\n      const data = JSON.parse(localUriData)\n      return data\n    }\n\n    const uriDataResponse = await fetch(tokenUrl)\n\n    if (!uriDataResponse.ok) {\n      throw new Error('Unable to fetch uriData')\n    }\n\n    const uriData = await uriDataResponse.json()\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\n    return uriData\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\n\n    if (!uriData) {\n      return null\n    }\n\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { IPFS_GATEWAY } from './nfts'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1000px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'SouvlakiSwap',\n  description: 'SouvlakiSwap',\n  image: 'https://souvlakiswap.com/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('SouvlakiSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      {children}\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setRememberExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({\n  setShowConfirmExpertModal,\n  setRememberExpertModeAcknowledgement,\n}) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setRememberExpertModeAcknowledgement(true)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useAudioModeManager, useExpertModeManager, useUserSingleHopOnly } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [rememberExpertModeAcknowledgement, setRememberExpertModeAcknowledgement] = usePersistState(false, {\n    localStorageKey: 'pancake_expert_mode_remember_acknowledgement',\n  })\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setRememberExpertModeAcknowledgement={setRememberExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (rememberExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { State } from '../types'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPublicLotteries } from '.'\nimport { useProcessLotteryResponse } from './helpers'\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData?.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID & max ticket buy\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (currentLotteryId) {\n      // Get historical lottery data from nodes +  last 100 subgraph entries\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      // get public data for current lottery\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      Loading...\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || \"transparent\"};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import { getBunnySpecialLotteryContract } from 'utils/contractHelpers'\nimport { UserRound } from 'state/types'\nimport { fetchUserTicketsForOneRound } from 'state/lottery/getUserTicketsData'\n\nexport interface LotteryNftMintData {\n  bunnyId: number | string\n  lotteryId: string\n  cursor: string\n}\n\nexport interface NftClaim {\n  canClaim: boolean\n  mintData: LotteryNftMintData\n}\n\nexport const NO_CLAIM: NftClaim = {\n  canClaim: false,\n  mintData: null,\n}\n\nexport const getLottieClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  if (lotteryId) {\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft1(account, lotteryId)\n\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lottie`, error)\n      return NO_CLAIM\n    }\n  }\n\n  return NO_CLAIM\n}\n\nexport const getLuckyClaim = async (\n  account: string,\n  variationId: number | string,\n  userRounds: UserRound[],\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  const claimedWinningRounds = userRounds.filter((round) => round.claimed)\n  if (claimedWinningRounds.length > 0) {\n    const [winningRound] = claimedWinningRounds\n    const userTickets = await fetchUserTicketsForOneRound(account, winningRound.lotteryId)\n    const claimedTickets = userTickets.filter((ticket) => ticket.status)\n    const winningTicketCursor = userTickets.indexOf(claimedTickets[0])\n    // No winning ticket found for an expected winning round. Can happen when switching accounts.\n    if (winningTicketCursor < 0) {\n      return NO_CLAIM\n    }\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft2(\n        account,\n        winningRound.lotteryId,\n        winningTicketCursor.toString(),\n      )\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: {\n            bunnyId: variationId,\n            lotteryId: winningRound.lotteryId,\n            cursor: winningTicketCursor.toString(),\n          },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lucky`, error)\n      return NO_CLAIM\n    }\n  }\n  return NO_CLAIM\n}\n\nexport const getBallerClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId?: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  try {\n    const isWhitelisted = await lotteryNftContract.userWhitelistForNft3(account)\n    if (isWhitelisted) {\n      try {\n        const passesContractCheck = await lotteryNftContract.canClaimNft3(account)\n        if (passesContractCheck) {\n          return {\n            canClaim: true,\n            mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n          }\n        }\n      } catch (error) {\n        console.error(`Failed to check canClaim for Baller`, error)\n        return NO_CLAIM\n      }\n    }\n  } catch (error) {\n    console.error(`Failed to check whitelist for ${account}`, error)\n    return NO_CLAIM\n  }\n  return NO_CLAIM\n}\n","import { useEffect, useState, useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetCurrentLotteryId } from 'state/lottery/hooks'\nimport { getGraphLotteryUser } from 'state/lottery/getUserLotteryData'\nimport { UserRound } from 'state/types'\nimport { getBunnySpecialLotteryAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport Nfts from 'config/constants/nfts'\nimport { fetchCurrentLotteryId } from 'state/lottery'\nimport { getBallerClaim, getLottieClaim, getLuckyClaim, NftClaim, NO_CLAIM } from '../helpers'\n\nconst useBunnySpecialLottery = (): {\n  canClaimLottie: () => Promise<NftClaim>\n  canClaimLucky: () => Promise<NftClaim>\n  canClaimBaller: () => Promise<NftClaim>\n} => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n  const currentLotteryIdNum = currentLotteryId && parseInt(currentLotteryId)\n  const [userRounds, setUserRounds] = useState<UserRound[]>(null)\n\n  useEffect(() => {\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    setUserRounds(null)\n  }, [account])\n\n  useEffect(() => {\n    const getUserData = async () => {\n      const lotteryNftContractAddress = getBunnySpecialLotteryAddress()\n      const calls = [\n        {\n          name: 'startLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n        {\n          name: 'finalLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n      ]\n\n      const [[startRound], [finalRound]] = await multicallv2(bunnySpecialLotteryAbi, calls)\n      const startLotteryRoundInt = startRound.toNumber()\n      const finalLotteryRoundInt = finalRound.toNumber()\n\n      const lotteryIdsArray = []\n      for (let i = startLotteryRoundInt; i <= finalLotteryRoundInt; i++) {\n        lotteryIdsArray.push(`${i}`)\n      }\n      const userParticipation = await getGraphLotteryUser(account, undefined, undefined, {\n        lottery_in: lotteryIdsArray,\n      })\n      setUserRounds(userParticipation.rounds)\n    }\n\n    if (account && currentLotteryIdNum && !userRounds) {\n      getUserData()\n    }\n  }, [currentLotteryIdNum, userRounds, account])\n\n  const canClaimLottie = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lottie')\n    const [userRound] = userRounds\n    const lottieClaim = await getLottieClaim(account, variationId, userRound.lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  const canClaimLucky = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lucky')\n    const luckyClaim = await getLuckyClaim(account, variationId, userRounds)\n    return luckyClaim\n  }, [account, userRounds])\n\n  const canClaimBaller = useCallback(async () => {\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'baller')\n    const lotteryId = userRounds && userRounds.length > 0 && userRounds[0].lotteryId\n\n    const lottieClaim = await getBallerClaim(account, variationId, lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  return { canClaimLottie, canClaimLucky, canClaimBaller }\n}\n\nexport default useBunnySpecialLottery\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },  \n  {\n    label: t('Referral'),\n    icon: 'ReferralIcon',\n    href: '/referral',\n  },  \n  {\n    label: t('Lottery'),\n    icon: 'LotteryIcon',\n    href: '/lottery',\n  },\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  // {\n  //   label: t('Lottery'),\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Info'),\n  //   icon: 'InfoIcon',\n  //   href: 'https://pancakeswap.info',\n  // },\n  // {\n  //   label: t('IFO'),\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  // {\n  //   label: t('More'),\n  //   icon: 'MoreIcon',\n  //   items: [\n  //     {\n  //       label: t('Contact'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us',\n  //     },\n  //     {\n  //       label: t('Voting'),\n  //       href: '/voting',\n  //     },\n  //     {\n  //       label: t('Github'),\n  //       href: 'https://github.com/pancakeswap',\n  //     },\n  //     {\n  //       label: t('Docs'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://pancakeswap.medium.com',\n  //     },\n  //     {\n  //       label: t('Merch'),\n  //       href: 'https://pancakeswap.creator-spring.com/',\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('CAKE Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Skeleton, UserMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport history from 'routerHistory'\n\ninterface ProfileUserMenuItemProps {\n  isLoading: boolean\n  hasProfile: boolean\n}\n\nconst Dot = styled.div`\n  background-color: ${({ theme }) => theme.colors.failure};\n  border-radius: 50%;\n  height: 8px;\n  width: 8px;\n`\n\nconst ProfileUserMenuItem: React.FC<ProfileUserMenuItemProps> = ({ isLoading, hasProfile }) => {\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    history.push('/profile')\n  }\n\n  if (isLoading) {\n    return (\n      <UserMenuItem>\n        <Skeleton height=\"24px\" width=\"35%\" />\n      </UserMenuItem>\n    )\n  }\n\n  if (!hasProfile) {\n    return (\n      <UserMenuItem as=\"button\" onClick={handleClick}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Make a Profile')}\n          <Dot />\n        </Flex>\n      </UserMenuItem>\n    )\n  }\n\n  return (\n    <UserMenuItem as=\"button\" onClick={handleClick}>\n      {t('Your Profile')}\n    </UserMenuItem>\n  )\n}\n\nexport default ProfileUserMenuItem\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 31.5%;\n  min-width: 280px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { useReferralManager } from 'state/user/hooks'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const [userReferral, setReferral] = useReferralManager()\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount, userReferral)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, userReferral],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { useReferralManager } from 'state/user/hooks'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const [userReferral, setReferral] = useReferralManager()\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount, userReferral)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId, userReferral],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { useReferralManager } from 'state/user/hooks'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n  const [userReferral, setReferral] = useReferralManager()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0, userReferral)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, userReferral])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(1, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>      \n      <Page>\n        <PageHeader>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"primary\" mb=\"24px\" textAlign=\"center\">\n              {t('Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\" textAlign=\"center\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\" textAlign=\"center\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n        </PageHeader>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards CAKE buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards CAKE buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport { useTranslation } from 'contexts/Localization'\nimport { Nft } from 'config/constants/types'\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\ninterface NftGiveawayModalProps extends InjectedModalProps {\n  nfts: Nft[]\n}\n\nconst NftGiveawayModal: React.FC<NftGiveawayModalProps> = ({ onDismiss, nfts }) => {\n  const { t } = useTranslation()\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  const getImages = () => {\n    return nfts.map((nft) => <NftImage key={nft.variationId} src={`/images/nfts/${nft.images.md}`} />)\n  }\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent=\"center\">\n          {getImages()}\n        </Flex>\n        <Text textAlign=\"center\" bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {nfts.length > 1 ? t('You won multiple collectibles!') : t('You won a collectible!')}\n        </Text>\n        <Button onClick={handleClick}>{t('Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default NftGiveawayModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\nimport nfts from 'config/constants/nfts'\nimport NftGiveawayModal from './NftGiveawayModal'\nimport useBunnySpecialLottery from '../hooks/useBunnySpecialLottery'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [claimableNfts, setClaimableNfts] = useState<Nft[]>([])\n  const [onPresentGiftModal] = useModal(<NftGiveawayModal nfts={claimableNfts} />)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const { canClaimBaller, canClaimLottie, canClaimLucky } = useBunnySpecialLottery()\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimable: Nft[] = []\n\n      const nftConfigMap = {\n        lottie: nfts.find((nft) => nft.identifier === 'lottie'),\n        lucky: nfts.find((nft) => nft.identifier === 'lucky'),\n        baller: nfts.find((nft) => nft.identifier === 'baller'),\n      }\n\n      const { canClaim: isBallerClaimable } = await canClaimBaller()\n      const { canClaim: isLottieClaimable } = await canClaimLottie()\n      const { canClaim: isLuckyClaimable } = await canClaimLucky()\n\n      if (isBallerClaimable) {\n        claimable.push(nftConfigMap.baller)\n      }\n\n      if (isLottieClaimable) {\n        claimable.push(nftConfigMap.lottie)\n      }\n\n      if (isLuckyClaimable) {\n        claimable.push(nftConfigMap.lucky)\n      }\n\n      setClaimableNfts(claimable)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, canClaimBaller, canClaimLottie, canClaimLucky])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (claimableNfts.length > 0 && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentGiftModal, claimableNfts])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport GlobalCheckClaimStatus from './views/Collectibles/components/GlobalCheckClaimStatus'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Referral = lazy(() => import('./views/Referral'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <GlobalCheckClaimStatus excludeLocations={['/collectibles']} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/referral\">\n              <Referral />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={dark} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}