{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useActiveWeb3React.ts","components/Layout/Row.tsx","state/mint/actions.ts","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","components/Layout/Column.tsx","utils/index.ts","config/constants/tokens.ts","config/constants/index.ts","utils/contractHelpers.ts","state/user/hooks/index.tsx","hooks/useContract.ts","config/constants/types.ts","components/Balance.tsx","state/types.ts","utils/multicall.ts","state/user/actions.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","utils/wrappedCurrency.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","config/index.ts","config/constants/lists.ts","state/lists/hooks.ts","state/user/hooks/helpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","config/constants/nfts.ts","config/constants/pools.ts","utils/providers.ts","config/constants/endpoints.ts","hooks/useTheme.ts","state/block/hooks.ts","hooks/useToast.ts","state/wallet/hooks.ts","state/farms/hooks.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/predictions/config.ts","hooks/useRefresh.ts","state/transactions/hooks.tsx","state/transactions/actions.ts","components/Card/index.tsx","state/lottery/helpers.ts","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","components/ConnectWalletButton.tsx","state/profile/helpers.ts","state/profile/index.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/swap/hooks.ts","hooks/usePairs.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","hooks/useCallWithGasPrice.ts","state/lottery/index.ts","hooks/useTokenBalance.ts","utils/isZero.ts","contexts/Localization/helpers.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useAuth.ts","hooks/useDebounce.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","utils/web3React.ts","routerHistory.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","components/Loader/CircleLoader.tsx","utils/getRpcUrl.ts","state/lottery/getUserLotteryData.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","config/constants/campaigns.ts","components/SearchModal/filtering.ts","hooks/usePersistState.ts","utils/collectibles.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","components/TokenImage/index.tsx","views/Page.tsx","state/lottery/getUserTicketsData.ts","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/hooks.ts","utils/truncateHash.ts","components/Loader/PageLoader.tsx","utils/getTimePeriods.ts","state/collectibles/index.ts","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","components/PageHeader/PageHeader.tsx","state/lottery/getLotteriesData.ts","components/Select/Select.tsx","components/Loading.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmHelpers.ts","utils/apr.ts","hooks/useParsedQueryString.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","views/Collectibles/helpers.ts","views/Collectibles/hooks/useBunnySpecialLottery.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/ProfileUserMenutItem.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","views/Collectibles/components/NftGiveawayModal.tsx","views/Collectibles/components/GlobalCheckClaimStatus.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","getAddress","address","process","ChainId","MAINNET","getCakeAddress","tokens","cake","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","Column","ColumnCenter","AutoColumn","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","Token","CAKE","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","souvlaki","qbt","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","muteAudio","unmuteAudio","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","updateUserSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","FarmStakedOnly","TRUE","FALSE","updateUserFarmStakedOnly","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","token","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","updateGasPrice","useReferralManager","referral","updateReferral","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","useMemo","generatedPairs","flatMap","tokenAddress","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","useIfoV1Contract","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useBunnySpecialLotteryContract","useFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","PoolIds","NftType","LotteryStatus","AuctionStatus","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","removeSerializedPair","toggleTheme","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","default","createReducer","builder","addCase","lastUpdateVersionTimestamp","action","payload","tokenAAddress","tokenBAddress","now","addTransaction","transactions","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","blockNumber","tx","lastCheckedBlockNumber","Math","max","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","includes","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","pools","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","isBNB","toUpperCase","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getBetHistory","where","first","skip","request","GRAPH_API_PREDICTION","gql","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","accum","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","Infinity","useCallsData","serializedCallKeys","JSON","stringify","c","sort","callKeys","parse","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","inputs","callData","useBlock","useMultipleContractSingleData","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","GAS_PRICE","parseUnits","fast","instant","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingSouvlaki","pendingReward","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","isLoading","lastDepositedTime","lastUserActionTime","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","createAsyncThunk","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","identifier","variationId","blur","CORE","harvest","RPC_URL","getRpcUrl","providers","JsonRpcProvider","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","useTheme","theme","StyledThemeContext","usePollBlockNumber","timer","isWindowVisible","useIsWindowVisible","setInterval","getBlockNumber","setBlock","clearInterval","useInitialBlock","initialBlock","useToast","toastContext","ToastsContext","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","usePollFarmsPublicData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","Toast","toast","onRemove","ttl","removeHandler","title","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","RefreshContext","slow","useAllTransactions","isTransactionRecent","allTransactions","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfileAvatar","hasRegistered","getUserProfile","getNftByTokenId","nft","getProfile","getTeam","team","Cookies","avatar","domain","secure","expires","isInitialized","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","fetchProfile","priceHelperLps","lpAddresses","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","getTokenLogoURL","StyledLogo","uriLocations","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","isTransitioning","currentRound","lotteriesData","userLotteryData","totalCake","totalTickets","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","getUserLotteryData","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","getGraphLotteryUser","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","FetchStatus","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","setBalance","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","FAILED","fetchBalance","refresh","balanceState","setBalanceState","balanceOf","prev","isZero","hexNumberString","getItem","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","useDebounce","delay","debouncedValue","setDebouncedValue","handler","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","hasProfile","useGetProfileAvatar","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","history","createBrowserHistory","TransactionState","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","GlobalSettings","BodyWrapper","AppBody","blockSlice","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","REACT_APP_NODE_4","sample","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","blankUser","userRes","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","inputRegex","Input","React","nextUserInput","target","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","val","campaigns","badge","campaignMap","campaign","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","defaultOptions","hydrate","identity","dehydrate","usePersistState","userOptions","localStorageKey","valueFromLS","setValue","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","fetchCachedUriData","tokenUrl","localUriData","uriDataResponse","uriData","getTokenUriData","tokenURI","Dots","span","textColor","useTotalSupply","totalSupply","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","maxWidth","DEFAULT_META","StyledPage","PageMeta","pathname","useLocation","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","setStateLastUpdated","previousLastUpdated","usePreviousValue","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","xs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","userSelect","maxAmountSpend","greaterThan","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setRememberExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","rememberExpertModeAcknowledgement","setSingleHopOnly","overflowY","pb","borderTop","TransactionSettings","onPresentSettingsModal","ens","resolvedContentHash","useENSContentHash","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","IDLE","newestRound","maxBy","futureRound","futureRounds","useGetCurrentLotteryId","useGetUserLotteriesGraphData","useGetUserLotteryGraphRoundById","userRound","useGetLotteriesGraphData","useGetLotteryGraphDataById","useFetchLottery","useLottery","processedCurrentRound","maxNumberTicketsPerBuyOrClaimAsString","startLength","endLength","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","Outer","Inner","PageHeader","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","Loading","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","parseArrays","ignoreQueryPrefix","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","NO_CLAIM","canClaim","mintData","getLottieClaim","lotteryNftContract","canClaimNft1","bunnyId","getLuckyClaim","claimedWinningRounds","winningRound","claimedTickets","winningTicketCursor","canClaimNft2","getBallerClaim","userWhitelistForNft3","canClaimNft3","useBunnySpecialLottery","currentLotteryIdNum","setUserRounds","lotteryNftContractAddress","startRound","finalRound","startLotteryRoundInt","finalLotteryRoundInt","lotteryIdsArray","lottery_in","userParticipation","getUserData","canClaimLottie","lottieClaim","canClaimLucky","luckyClaim","canClaimBaller","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","Dot","ProfileUserMenuItem","handleClick","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","globalMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","userReferral","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","NaN","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","NftImage","img","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","y","NftGiveawayModal","nfts","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","claimableNfts","setClaimableNfts","onPresentGiftModal","nftConfigMap","lottie","lucky","baller","isBallerClaimable","isLottieClaimable","isLuckyClaimable","fetchClaimStatus","matchesSomeLocations","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Referral","Global","exact","strict","iterations","ThemeProviderWrapper","dark","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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KAAM,MACNgxC,MAAO,QACPozB,MAAO,eAET,CACE9xD,GAAI,YACJtS,KAAM,MACNgxC,MAAO,UACPozB,MAAO,iBAET,CACE9xD,GAAI,YACJtS,KAAM,MACNgxC,MAAO,SACPozB,MAAO,kBAET,CACE9xD,GAAI,YACJtS,KAAM,MACNgxC,MAAO,QACPozB,MAAO,eAET,CACE9xD,GAAI,YACJtS,KAAM,MACNgxC,MAAO,QACPozB,MAAO,iBAET,CACE9xD,GAAI,YACJtS,KAAM,MACNgxC,MAAO,QACPozB,MAAO,eAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,wBACPozB,MAAO,4BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,uBACPozB,MAAO,2BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,uBACPozB,MAAO,2BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,uBACPozB,MAAO,2BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,2BACPozB,MAAO,+BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,0BACPozB,MAAO,8BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,yBACPozB,MAAO,6BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,yBACPozB,MAAO,6BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,yBACPozB,MAAO,6BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,6BACPozB,MAAO,iCAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,0BACPozB,MAAO,8BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,yBACPozB,MAAO,6BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,yBACPozB,MAAO,6BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,yBACPozB,MAAO,6BAET,CACE9xD,GAAI,YACJtS,KAAM,aACNgxC,MAAO,6BACPozB,MAAO,iCAET,CACE9xD,GAA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","file":"static/js/main.69dc0bb9.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x8Ab88fafA3D33077E96F76879a2179289b7AbEB6',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  souvlaki: {\n    symbol: 'SOUVLAKI',\n    address: {\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://souvlakiswap.com/',\n  },\n  qbt: {\n    symbol: 'QBT',\n    address: {\n      56: '0x17B7163cf1Dbd286E262ddc68b553D899B93f526',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://qbt.fi/',\n  },\n  pha: {\n    symbol: 'PHA',\n    address: {\n      56: '0x0112e557d400474717056C4e6D40eDD846F38351',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://phala.network',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  pots: {\n    symbol: 'POTS',\n    address: {\n      56: '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://moonpot.com/',\n  },\n  gnt: {\n    symbol: 'GNT',\n    address: {\n      56: '0xf750a26eb0acf95556e8529e72ed530f3b60f348',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.greentrusttoken.com/',\n  },\n  rusd: {\n    symbol: 'rUSD',\n    address: {\n      56: '0x07663837218a003e66310a01596af4bf4e44623d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://appv2.rampdefi.com/#/',\n  },\n  bp: {\n    symbol: 'BP',\n    address: {\n      56: '0xacb8f52dc63bb752a51186d1c55868adbffee9c1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bunnypark.com/',\n  },\n  sfund: {\n    symbol: 'SFUND',\n    address: {\n      56: '0x477bc8d23c634c154061869478bce96be6045d12',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://seedify.fund/ ',\n  },\n  naos: {\n    symbol: 'NAOS',\n    address: {\n      56: '0x758d08864fb6cce3062667225ca10b8f00496cc2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://naos.finance/',\n  },\n}\n\nexport default tokens\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  updateReferral,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nexport function useReferral(): string {\n  const referral = useSelector<AppState, AppState['user']['referral']>((state) => state.user.referral)\n  return referral\n}\n\nexport function useReferralManager(): [string, (userReferral: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userReferral = useReferral()\n\n  const setReferral = useCallback(\n    (referral: string) => {\n      dispatch(updateReferral({ referral }))\n    },\n    [dispatch],\n  )\n\n  return [userReferral, setReferral]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: Nft\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\nexport const updateReferral = createAction<{ referral: string }>('user/updateReferral')","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  updateGasPrice,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n  updateReferral,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  gasPrice: string\n  referral: string\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  gasPrice: GAS_PRICE_GWEI.default,\n  referral: '',\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(updateReferral, (state, action) => {\n      state.referral = action.payload.referral\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingSouvlaki('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Baller',\n    description: 'Absolute (lottery) baller.',\n    images: {\n      lg: 'baller-lg.png',\n      md: 'baller-md.png',\n      sm: 'baller-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.webm`,\n      mp4: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'baller',\n    type: NftType.PANCAKE,\n    variationId: 20,\n  },\n  {\n    name: 'Lucky',\n    description: \"Lucky's got the golden ticket!\",\n    images: {\n      lg: 'lucky-lg.png',\n      md: 'lucky-md.png',\n      sm: 'lucky-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.webm`,\n      mp4: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lucky',\n    type: NftType.PANCAKE,\n    variationId: 19,\n  },\n  {\n    name: 'Lottie',\n    description: \"Lottie's looking hotto for lotto!\",\n    images: {\n      lg: 'lottie-lg.png',\n      md: 'lottie-md.png',\n      sm: 'lottie-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lottie',\n    type: NftType.PANCAKE,\n    variationId: 18,\n  },\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png`,\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm`,\n      mp4: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png'`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm`,\n      mp4: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png`,\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png`,\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png`,\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png`,\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png`,\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png`,\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.souvlaki,\n    earningToken: tokens.souvlaki,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { getTeam } from 'state/teams/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    nftAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n\n    if (!isActive) {\n      return null\n    }\n\n    const nft = await getNftByTokenId(nftAddress, tokenId)\n    return nft\n  } catch {\n    return null\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { Nft } from 'config/constants/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: Nft }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const nft = await getProfileAvatar(account)\n    return { account, nft }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<{ account: string; username: string }, string>(\n  'profile/fetchProfileUsername',\n  async (account) => {\n    const username = await getUsername(account)\n    return { account, username }\n  },\n)\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n        }\n      } else {\n        state.profileAvatars[account] = { username, nft: null }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n        }\n      } else {\n        state.profileAvatars[account] = { username: null, nft }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingSouvlaki',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'SOUVLAKI',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n    },\n    token: tokens.souvlaki,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'SOUVLAKI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2843ad12c0F0186A8Bb4A5a1ca839702e4B5955f',\n    },\n    token: tokens.souvlaki,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (!username && nft && address) {\n      dispatch(fetchProfileUsername(account))\n    }\n  }, [account, nft, username, dispatch])\n\n  return { username, nft }\n}\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount, referral) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, referral, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, referral, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount, referral) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid, referral) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', referral, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_4, process.env.REACT_APP_NODE_4, process.env.REACT_APP_NODE_4]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const fetchCachedUriData = async (tokenUrl: string) => {\n  try {\n    const localUriData = localStorage.getItem(tokenUrl)\n\n    if (localUriData) {\n      const data = JSON.parse(localUriData)\n      return data\n    }\n\n    const uriDataResponse = await fetch(tokenUrl)\n\n    if (!uriDataResponse.ok) {\n      throw new Error('Unable to fetch uriData')\n    }\n\n    const uriData = await uriDataResponse.json()\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\n    return uriData\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\n\n    if (!uriData) {\n      return null\n    }\n\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { IPFS_GATEWAY } from './nfts'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1000px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'SouvlakiSwap',\n  description: 'SouvlakiSwap',\n  image: 'https://souvlakiswap.com/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('SouvlakiSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('SouvlakiSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      {children}\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setRememberExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({\n  setShowConfirmExpertModal,\n  setRememberExpertModeAcknowledgement,\n}) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setRememberExpertModeAcknowledgement(true)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useAudioModeManager, useExpertModeManager, useUserSingleHopOnly } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [rememberExpertModeAcknowledgement, setRememberExpertModeAcknowledgement] = usePersistState(false, {\n    localStorageKey: 'pancake_expert_mode_remember_acknowledgement',\n  })\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setRememberExpertModeAcknowledgement={setRememberExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (rememberExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { State } from '../types'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPublicLotteries } from '.'\nimport { useProcessLotteryResponse } from './helpers'\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData?.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID & max ticket buy\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (currentLotteryId) {\n      // Get historical lottery data from nodes +  last 100 subgraph entries\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      // get public data for current lottery\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      Loading...\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || \"transparent\"};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import { getBunnySpecialLotteryContract } from 'utils/contractHelpers'\nimport { UserRound } from 'state/types'\nimport { fetchUserTicketsForOneRound } from 'state/lottery/getUserTicketsData'\n\nexport interface LotteryNftMintData {\n  bunnyId: number | string\n  lotteryId: string\n  cursor: string\n}\n\nexport interface NftClaim {\n  canClaim: boolean\n  mintData: LotteryNftMintData\n}\n\nexport const NO_CLAIM: NftClaim = {\n  canClaim: false,\n  mintData: null,\n}\n\nexport const getLottieClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  if (lotteryId) {\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft1(account, lotteryId)\n\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lottie`, error)\n      return NO_CLAIM\n    }\n  }\n\n  return NO_CLAIM\n}\n\nexport const getLuckyClaim = async (\n  account: string,\n  variationId: number | string,\n  userRounds: UserRound[],\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  const claimedWinningRounds = userRounds.filter((round) => round.claimed)\n  if (claimedWinningRounds.length > 0) {\n    const [winningRound] = claimedWinningRounds\n    const userTickets = await fetchUserTicketsForOneRound(account, winningRound.lotteryId)\n    const claimedTickets = userTickets.filter((ticket) => ticket.status)\n    const winningTicketCursor = userTickets.indexOf(claimedTickets[0])\n    // No winning ticket found for an expected winning round. Can happen when switching accounts.\n    if (winningTicketCursor < 0) {\n      return NO_CLAIM\n    }\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft2(\n        account,\n        winningRound.lotteryId,\n        winningTicketCursor.toString(),\n      )\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: {\n            bunnyId: variationId,\n            lotteryId: winningRound.lotteryId,\n            cursor: winningTicketCursor.toString(),\n          },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lucky`, error)\n      return NO_CLAIM\n    }\n  }\n  return NO_CLAIM\n}\n\nexport const getBallerClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId?: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  try {\n    const isWhitelisted = await lotteryNftContract.userWhitelistForNft3(account)\n    if (isWhitelisted) {\n      try {\n        const passesContractCheck = await lotteryNftContract.canClaimNft3(account)\n        if (passesContractCheck) {\n          return {\n            canClaim: true,\n            mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n          }\n        }\n      } catch (error) {\n        console.error(`Failed to check canClaim for Baller`, error)\n        return NO_CLAIM\n      }\n    }\n  } catch (error) {\n    console.error(`Failed to check whitelist for ${account}`, error)\n    return NO_CLAIM\n  }\n  return NO_CLAIM\n}\n","import { useEffect, useState, useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetCurrentLotteryId } from 'state/lottery/hooks'\nimport { getGraphLotteryUser } from 'state/lottery/getUserLotteryData'\nimport { UserRound } from 'state/types'\nimport { getBunnySpecialLotteryAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport Nfts from 'config/constants/nfts'\nimport { fetchCurrentLotteryId } from 'state/lottery'\nimport { getBallerClaim, getLottieClaim, getLuckyClaim, NftClaim, NO_CLAIM } from '../helpers'\n\nconst useBunnySpecialLottery = (): {\n  canClaimLottie: () => Promise<NftClaim>\n  canClaimLucky: () => Promise<NftClaim>\n  canClaimBaller: () => Promise<NftClaim>\n} => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n  const currentLotteryIdNum = currentLotteryId && parseInt(currentLotteryId)\n  const [userRounds, setUserRounds] = useState<UserRound[]>(null)\n\n  useEffect(() => {\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    setUserRounds(null)\n  }, [account])\n\n  useEffect(() => {\n    const getUserData = async () => {\n      const lotteryNftContractAddress = getBunnySpecialLotteryAddress()\n      const calls = [\n        {\n          name: 'startLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n        {\n          name: 'finalLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n      ]\n\n      const [[startRound], [finalRound]] = await multicallv2(bunnySpecialLotteryAbi, calls)\n      const startLotteryRoundInt = startRound.toNumber()\n      const finalLotteryRoundInt = finalRound.toNumber()\n\n      const lotteryIdsArray = []\n      for (let i = startLotteryRoundInt; i <= finalLotteryRoundInt; i++) {\n        lotteryIdsArray.push(`${i}`)\n      }\n      const userParticipation = await getGraphLotteryUser(account, undefined, undefined, {\n        lottery_in: lotteryIdsArray,\n      })\n      setUserRounds(userParticipation.rounds)\n    }\n\n    if (account && currentLotteryIdNum && !userRounds) {\n      getUserData()\n    }\n  }, [currentLotteryIdNum, userRounds, account])\n\n  const canClaimLottie = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lottie')\n    const [userRound] = userRounds\n    const lottieClaim = await getLottieClaim(account, variationId, userRound.lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  const canClaimLucky = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lucky')\n    const luckyClaim = await getLuckyClaim(account, variationId, userRounds)\n    return luckyClaim\n  }, [account, userRounds])\n\n  const canClaimBaller = useCallback(async () => {\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'baller')\n    const lotteryId = userRounds && userRounds.length > 0 && userRounds[0].lotteryId\n\n    const lottieClaim = await getBallerClaim(account, variationId, lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  return { canClaimLottie, canClaimLucky, canClaimBaller }\n}\n\nexport default useBunnySpecialLottery\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },  \n  {\n    label: t('Referral'),\n    icon: 'ReferralIcon',\n    href: '/referral',\n  },  \n  {\n    label: t('Lottery'),\n    icon: 'LotteryIcon',\n    href: '/lottery',\n  },\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  // {\n  //   label: t('Lottery'),\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Info'),\n  //   icon: 'InfoIcon',\n  //   href: 'https://pancakeswap.info',\n  // },\n  // {\n  //   label: t('IFO'),\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  // {\n  //   label: t('More'),\n  //   icon: 'MoreIcon',\n  //   items: [\n  //     {\n  //       label: t('Contact'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us',\n  //     },\n  //     {\n  //       label: t('Voting'),\n  //       href: '/voting',\n  //     },\n  //     {\n  //       label: t('Github'),\n  //       href: 'https://github.com/pancakeswap',\n  //     },\n  //     {\n  //       label: t('Docs'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://pancakeswap.medium.com',\n  //     },\n  //     {\n  //       label: t('Merch'),\n  //       href: 'https://pancakeswap.creator-spring.com/',\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('CAKE Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Skeleton, UserMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport history from 'routerHistory'\n\ninterface ProfileUserMenuItemProps {\n  isLoading: boolean\n  hasProfile: boolean\n}\n\nconst Dot = styled.div`\n  background-color: ${({ theme }) => theme.colors.failure};\n  border-radius: 50%;\n  height: 8px;\n  width: 8px;\n`\n\nconst ProfileUserMenuItem: React.FC<ProfileUserMenuItemProps> = ({ isLoading, hasProfile }) => {\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    history.push('/profile')\n  }\n\n  if (isLoading) {\n    return (\n      <UserMenuItem>\n        <Skeleton height=\"24px\" width=\"35%\" />\n      </UserMenuItem>\n    )\n  }\n\n  if (!hasProfile) {\n    return (\n      <UserMenuItem as=\"button\" onClick={handleClick}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Make a Profile')}\n          <Dot />\n        </Flex>\n      </UserMenuItem>\n    )\n  }\n\n  return (\n    <UserMenuItem as=\"button\" onClick={handleClick}>\n      {t('Your Profile')}\n    </UserMenuItem>\n  )\n}\n\nexport default ProfileUserMenuItem\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 31.5%;\n  min-width: 280px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { useReferralManager } from 'state/user/hooks'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const [userReferral, setReferral] = useReferralManager()\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount, userReferral)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, userReferral],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { useReferralManager } from 'state/user/hooks'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const [userReferral, setReferral] = useReferralManager()\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount, userReferral)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId, userReferral],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { useReferralManager } from 'state/user/hooks'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n  const [userReferral, setReferral] = useReferralManager()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0, userReferral)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, userReferral])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(1, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>      \n      <Page>\n        <PageHeader>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"primary\" mb=\"24px\" textAlign=\"center\">\n              {t('Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\" textAlign=\"center\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\" textAlign=\"center\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n        </PageHeader>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards CAKE buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards CAKE buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport { useTranslation } from 'contexts/Localization'\nimport { Nft } from 'config/constants/types'\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\ninterface NftGiveawayModalProps extends InjectedModalProps {\n  nfts: Nft[]\n}\n\nconst NftGiveawayModal: React.FC<NftGiveawayModalProps> = ({ onDismiss, nfts }) => {\n  const { t } = useTranslation()\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  const getImages = () => {\n    return nfts.map((nft) => <NftImage key={nft.variationId} src={`/images/nfts/${nft.images.md}`} />)\n  }\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent=\"center\">\n          {getImages()}\n        </Flex>\n        <Text textAlign=\"center\" bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {nfts.length > 1 ? t('You won multiple collectibles!') : t('You won a collectible!')}\n        </Text>\n        <Button onClick={handleClick}>{t('Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default NftGiveawayModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\nimport nfts from 'config/constants/nfts'\nimport NftGiveawayModal from './NftGiveawayModal'\nimport useBunnySpecialLottery from '../hooks/useBunnySpecialLottery'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [claimableNfts, setClaimableNfts] = useState<Nft[]>([])\n  const [onPresentGiftModal] = useModal(<NftGiveawayModal nfts={claimableNfts} />)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const { canClaimBaller, canClaimLottie, canClaimLucky } = useBunnySpecialLottery()\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimable: Nft[] = []\n\n      const nftConfigMap = {\n        lottie: nfts.find((nft) => nft.identifier === 'lottie'),\n        lucky: nfts.find((nft) => nft.identifier === 'lucky'),\n        baller: nfts.find((nft) => nft.identifier === 'baller'),\n      }\n\n      const { canClaim: isBallerClaimable } = await canClaimBaller()\n      const { canClaim: isLottieClaimable } = await canClaimLottie()\n      const { canClaim: isLuckyClaimable } = await canClaimLucky()\n\n      if (isBallerClaimable) {\n        claimable.push(nftConfigMap.baller)\n      }\n\n      if (isLottieClaimable) {\n        claimable.push(nftConfigMap.lottie)\n      }\n\n      if (isLuckyClaimable) {\n        claimable.push(nftConfigMap.lucky)\n      }\n\n      setClaimableNfts(claimable)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, canClaimBaller, canClaimLottie, canClaimLucky])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (claimableNfts.length > 0 && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentGiftModal, claimableNfts])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport GlobalCheckClaimStatus from './views/Collectibles/components/GlobalCheckClaimStatus'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Referral = lazy(() => import('./views/Referral'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <GlobalCheckClaimStatus excludeLocations={['/collectibles']} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/referral\">\n              <Referral />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={dark} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}